name: Full CI/CD (Tests + Build + Deploy)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  full-pipeline:
    runs-on: ubuntu-latest
    environment: development
    env:
      NODE_ENV: ${{ vars.NODE_ENV }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      SMTP_FROM: ${{ secrets.SMTP_FROM }}
    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      # 3Ô∏è‚É£ Install dependencies (lockfile synchronis√©)
      - name: Install dependencies
        run: npm ci

      # 4Ô∏è‚É£ TypeScript & TSX check
      - name: Check TypeScript types
        run: npx tsc --noEmit

      # 5Ô∏è‚É£ Generate Prisma client
      - name: Generate Prisma client
        run: npx prisma generate

      # 6Ô∏è‚É£ Apply Prisma migrations
      - name: Apply Prisma migrations on NeonDB
        run: npx prisma migrate deploy

      # 7Ô∏è‚É£ Run unit & integration tests (Vitest)
      - name: Run Vitest (unit & integration)
        run: npm run test:unit

      - name: Upload Vitest coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-coverage
          path: coverage/
          retention-days: 30

      # 8Ô∏è‚É£ Run E2E tests (Playwright)
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # 9Ô∏è‚É£ Security audit
      - name: Security audit
        run: npm audit --audit-level high

      # üîü Build Astro project
      - name: Build project
        run: npm run build

      # 1Ô∏è‚É£1Ô∏è‚É£ Install Vercel CLI
      - name: Install Vercel CLI
        run: npm install -g vercel

      # 1Ô∏è‚É£2Ô∏è‚É£ Deploy to Vercel Preview
      - name: Deploy to Vercel Preview
        run: vercel --token ${{ secrets.VERCEL_TOKEN }} --confirm
