---
export const prerender = false;
import BaseLayout from "@layouts/BaseLayout.astro";

const user = Astro.locals.user;
const auth = Astro.locals.auth;
if (!user) return Astro.redirect("/connexion");
if (user.role !== "admin") return Astro.redirect("/");

function getError(param: string): boolean {
  return Astro.request.method === "POST" && Astro.url.searchParams.get("error") === param;
}
function getSuccess(param: string): boolean {
  return Astro.request.method === "POST" && Astro.url.searchParams.get("success") === param;
}

let actionError = null;
let actionSuccess = null;
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const action = formData.get("action");
  try {
    if (action === "create-user") {
      const name = formData.get("name");
      const email = formData.get("email");
      const password = formData.get("password");
      const role = formData.get("role") || "user";
      const username = formData.get("username") || undefined;
      const { data, error } = await auth.api.createUser({
        body: { name, email, password, role, ...(username ? { username } : {}) }
      });
      if (error) throw new Error(error.message || "Erreur lors de la cr√©ation");
      actionSuccess = "Utilisateur cr√©√© avec succ√®s.";
    } else if (action === "ban-user") {
      const userId = formData.get("userId");
      const banReason = formData.get("banReason");
      const banExpires = formData.get("banExpires");
      let banExpiresIn = undefined;
      if (banExpires && (typeof banExpires === "string" || typeof banExpires === "number" || banExpires instanceof Date)) {
        const expiresDate = new Date(banExpires as string | number | Date);
        banExpiresIn = Math.floor((expiresDate.getTime() - Date.now()) / 1000);
      }
      const { data, error } = await auth.api.banUser({
        body: { userId, banReason, ...(banExpiresIn ? { banExpiresIn } : {}) }
      });
      if (error) throw new Error(error.message || "Erreur lors du bannissement");
      actionSuccess = "Utilisateur banni avec succ√®s.";
    } else if (action === "unban-user") {
      const userId = formData.get("userId");
      const { data, error } = await auth.api.unbanUser({
        body: { userId }
      });
      if (error) throw new Error(error.message || "Erreur lors du d√©bannissement");
      actionSuccess = "Utilisateur d√©banni avec succ√®s.";
    } else if (action === "set-role") {
      const userId = formData.get("userId");
      const role = formData.get("role");
      const { data, error } = await auth.api.setRole({
        body: { userId, role }
      });
      if (error) throw new Error(error.message || "Erreur lors du changement de r√¥le");
      actionSuccess = "R√¥le mis √† jour.";
    } else if (action === "delete-user") {
      const userId = formData.get("userId");
      const { data, error } = await auth.api.removeUser({
        body: { userId }
      });
      if (error) throw new Error(error.message || "Erreur lors de la suppression");
      actionSuccess = "Utilisateur supprim√©.";
    }
  } catch (err) {
    actionError = (err && typeof err === "object" && "message" in err) ? (err as any).message : "Erreur inconnue";
  }
}

let users = [];
let usersTotal = 0;
let orgs = [];
let orgsTotal = 0;
let bannedCount = 0;
let sessionsCount = 0;
try {
  const usersRes = await auth.api.listUsers({
    query: {
      limit: 100,
      offset: 0,
      sortBy: "createdAt",
      sortDirection: "desc"
    }
  });
  users = usersRes.users || [];
  usersTotal = usersRes.total || 0;
  bannedCount = users.filter(u => u.banned).length;
  if (auth.api.listOrganizations) {
    const orgsRes = await auth.api.listOrganizations({});
    orgs = orgsRes.organizations || [];
    orgsTotal = orgs.length;
  }
  if (auth.api.listUserSessions) {
    const sessionsRes = await auth.api.listUserSessions({});
    sessionsCount = Array.isArray(sessionsRes) ? sessionsRes.length : (sessionsRes.data?.length || 0);
  }
} catch (err) {
  actionError = actionError || ((err && typeof err === "object" && "message" in err) ? (err as any).message : "Erreur lors du chargement des donn√©es");
}

---

<BaseLayout title="Administration" description="Tableau de bord administrateur">
  <div class="admin-container">
    <div class="admin-header">
      <h1>Dashboard Administrateur</h1>
      <p>Gestion de la plateforme et des utilisateurs</p>
    </div>
    <div class="admin-content">
      <!-- Stats Overview -->
      <div class="stats-section">
        <div class="stats-grid">
          <div class="stat-card">
            <div class="stat-icon">üë•</div>
            <div class="stat-info">
              <h3>{usersTotal}</h3>
              <p>Utilisateurs</p>
            </div>
          </div>
          <div class="stat-card">
            <div class="stat-icon">üè¢</div>
            <div class="stat-info">
              <h3>{orgsTotal}</h3>
              <p>Organisations</p>
            </div>
          </div>
          <div class="stat-card">
            <div class="stat-icon">üìù</div>
            <div class="stat-info">
              <h3>{sessionsCount}</h3>
              <p>Sessions actives</p>
            </div>
          </div>
          <div class="stat-card">
            <div class="stat-icon">üö´</div>
            <div class="stat-info">
              <h3>{bannedCount}</h3>
              <p>Utilisateurs bannis</p>
            </div>
          </div>
        </div>
      </div>
      <!-- Quick Actions -->
      <div class="admin-section">
        <div class="section-header">
          <h2>Actions rapides</h2>
        </div>
        <div class="actions-grid">
          <form method="post" style="display:inline">
            <input type="hidden" name="action" value="create-user-modal" />
            <button class="action-btn" type="submit">
              <div class="action-icon">‚ûï</div>
              <span>Cr√©er un utilisateur</span>
            </button>
          </form>
          <!-- TODO: Ajouter actions org, logs, etc. -->
        </div>
      </div>
      <!-- Users Management -->
      <div class="admin-section">
        <div class="section-header">
          <h2>Gestion des utilisateurs</h2>
        </div>
        {actionError && <div class="auth-error">{actionError}</div>}
        {actionSuccess && <div class="auth-success">{actionSuccess}</div>}
        <div class="table-container">
          <table class="admin-table">
            <thead>
              <tr>
                <th>Utilisateur</th>
                <th>Email</th>
                <th>R√¥le</th>
                <th>Statut</th>
                <th>Inscription</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {users.length === 0 && (
                <tr><td colspan="6" style="text-align:center;padding:2rem;">Aucun utilisateur trouv√©</td></tr>
              )}
              {users.map(user => (
                <tr>
                  <td>
                    <div class="user-info">
                      <img src={user.image || '/placeholder-avatar.png'} alt="" class="user-avatar" />
                      <div class="user-details">
                        <span class="user-name">{user.name || 'Inconnu'}</span>
                        <span class="user-username">@{user.username || 'N/A'}</span>
                      </div>
                    </div>
                  </td>
                  <td>{user.email}</td>
                  <td>{user.role || 'user'}</td>
                  <td>
                    <span class={`status-badge ${user.banned ? 'status-banned' : user.emailVerified ? 'status-active' : 'status-unverified'}`}>{user.banned ? 'Banni' : user.emailVerified ? 'Actif' : 'Non v√©rifi√©'}</span>
                  </td>
                  <td>{new Date(user.createdAt).toLocaleDateString('fr-FR')}</td>
                  <td>
                    <form method="post" style="display:inline">
                      <input type="hidden" name="action" value="set-role" />
                      <input type="hidden" name="userId" value={user.id} />
                      <select name="role" style="margin-right:0.5rem;">
                        <option value="user" selected={user.role === 'user'}>Utilisateur</option>
                        <option value="admin" selected={user.role === 'admin'}>Administrateur</option>
                      </select>
                      <button class="btn-small btn-edit" type="submit">Changer</button>
                    </form>
                    {!user.banned && (
                      <form method="post" style="display:inline">
                        <input type="hidden" name="action" value="ban-user" />
                        <input type="hidden" name="userId" value={user.id} />
                        <input type="hidden" name="banReason" value="Banni par admin" />
                        <button class="btn-small btn-ban" type="submit">Bannir</button>
                      </form>
                    )}
                    {user.banned && (
                      <form method="post" style="display:inline">
                        <input type="hidden" name="action" value="unban-user" />
                        <input type="hidden" name="userId" value={user.id} />
                        <button class="btn-small btn-unban" type="submit">D√©bannir</button>
                      </form>
                    )}
                    <form method="post" style="display:inline">
                      <input type="hidden" name="action" value="delete-user" />
                      <input type="hidden" name="userId" value={user.id} />
                      <button class="btn-small btn-ban" type="submit">Supprimer</button>
                    </form>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
      <!-- Organizations Management (optionnel) -->
      {orgs && orgs.length > 0 && (
        <div class="admin-section">
          <div class="section-header">
            <h2>Gestion des organisations</h2>
          </div>
          <div class="table-container">
            <table class="admin-table">
              <thead>
                <tr>
                  <th>Organisation</th>
                  <th>Slug</th>
                  <th>Membres</th>
                  <th>Cr√©ation</th>
                </tr>
              </thead>
              <tbody>
                {orgs.map(org => (
                  <tr>
                    <td>{org.name}</td>
                    <td>{org.slug}</td>
                    <td>{org.members ? org.members.length : 0}</td>
                    <td>{new Date(org.createdAt).toLocaleDateString('fr-FR')}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}
      <!-- System Information -->
      <div class="admin-section">
        <div class="section-header">
          <h2>Informations syst√®me</h2>
        </div>
        <div class="system-info">
          <div class="info-card">
            <h3>Configuration Better Auth</h3>
            <ul>
              <li>Email/Password: ‚úÖ Activ√©</li>
              <li>Username: ‚úÖ Activ√©</li>
              <li>Email OTP: ‚úÖ Activ√©</li>
              <li>Organizations: ‚úÖ Activ√©</li>
              <li>Admin: ‚úÖ Activ√©</li>
            </ul>
          </div>
          <div class="info-card">
            <h3>Base de donn√©es</h3>
            <p>Statut: <span class="status-ok">Connect√©e</span></p>
            <p>Provider: PostgreSQL</p>
          </div>
          <div class="info-card">
            <h3>SMTP</h3>
            <p>Statut: <span class="status-ok">Fonctionnel</span></p>
          </div>
        </div>
      </div>
      <!-- Create User Form (inline, pas modal) -->
      <div class="admin-section">
        <div class="section-header">
          <h2>Cr√©er un utilisateur</h2>
        </div>
        <form method="post">
          <input type="hidden" name="action" value="create-user" />
          <div class="form-group">
            <label for="user-name">Nom complet</label>
            <input type="text" id="user-name" name="name" required />
          </div>
          <div class="form-group">
            <label for="user-email">Email</label>
            <input type="email" id="user-email" name="email" required />
          </div>
          <div class="form-group">
            <label for="user-username">Nom d'utilisateur</label>
            <input type="text" id="user-username" name="username" />
          </div>
          <div class="form-group">
            <label for="user-password">Mot de passe</label>
            <input type="password" id="user-password" name="password" required />
          </div>
          <div class="form-group">
            <label for="user-role">R√¥le</label>
            <select id="user-role" name="role">
              <option value="user">Utilisateur</option>
              <option value="admin">Administrateur</option>
            </select>
          </div>
          <div class="form-actions">
            <button type="submit" class="btn-primary">Cr√©er</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</BaseLayout>
<style>
  .admin-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }
  .admin-header {
    text-align: center;
    margin-bottom: 3rem;
  }
  .admin-header h1 {
    margin: 0 0 0.5rem;
    font-size: 2.5rem;
    font-weight: 700;
    color: #1a202c;
  }
  .admin-header p {
    margin: 0;
    font-size: 1.125rem;
    color: #6b7280;
  }
  .admin-content {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }
  .stats-section {
    margin-bottom: 1rem;
  }
  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }
  .stat-card {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  .stat-icon {
    font-size: 2rem;
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f3f4f6;
    border-radius: 50%;
  }
  .stat-info h3 {
    margin: 0;
    font-size: 2rem;
    font-weight: 700;
    color: #1a202c;
  }
  .stat-info p {
    margin: 0;
    color: #6b7280;
    font-size: 0.875rem;
  }
  .admin-section {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    padding: 2rem;
  }
  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    border-bottom: 1px solid #e5e7eb;
    padding-bottom: 1rem;
  }
  .section-header h2 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: 600;
    color: #1a202c;
  }
  .section-controls {
    display: flex;
    gap: 1rem;
    align-items: center;
  }
  .section-controls input[type="search"] {
    padding: 0.5rem 1rem;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    width: 250px;
  }
  .actions-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
  }
  .action-btn {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 1.5rem;
    background: #f9fafb;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  .action-btn:hover {
    background: #f3f4f6;
    border-color: #3b82f6;
  }
  .action-icon {
    font-size: 2rem;
  }
  .table-container {
    overflow-x: auto;
  }
  .admin-table {
    width: 100%;
    border-collapse: collapse;
    font-size: 0.875rem;
  }
  .admin-table th,
  .admin-table td {
    padding: 0.75rem;
    text-align: left;
    border-bottom: 1px solid #e5e7eb;
  }
  .admin-table th {
    background: #f9fafb;
    font-weight: 600;
    color: #374151;
  }
  .admin-table tr:hover {
    background: #f9fafb;
  }
  .user-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }
  .user-avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    object-fit: cover;
  }
  .user-details {
    display: flex;
    flex-direction: column;
  }
  .user-name {
    font-weight: 500;
    color: #1a202c;
  }
  .user-username {
    font-size: 0.75rem;
    color: #6b7280;
  }
  .status-badge {
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 500;
  }
  .status-active {
    background: #d1fae5;
    color: #065f46;
  }
  .status-banned {
    background: #fecaca;
    color: #991b1b;
  }
  .status-unverified {
    background: #fef3cd;
    color: #92400e;
  }
  .table-actions {
    display: flex;
    gap: 0.5rem;
  }
  .btn-small {
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  .btn-edit {
    background: #dbeafe;
    color: #1d4ed8;
  }
  .btn-edit:hover {
    background: #bfdbfe;
  }
  .btn-ban {
    background: #fecaca;
    color: #991b1b;
  }
  .btn-ban:hover {
    background: #fca5a5;
  }
  .btn-unban {
    background: #d1fae5;
    color: #065f46;
  }
  .btn-unban:hover {
    background: #a7f3d0;
  }
  .system-info {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }
  .info-card {
    background: #f9fafb;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    padding: 1.5rem;
  }
  .info-card h3 {
    margin: 0 0 1rem;
    font-size: 1.125rem;
    font-weight: 600;
    color: #1a202c;
  }
  .info-card ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  .info-card li {
    padding: 0.25rem 0;
    color: #374151;
  }
  .info-card p {
    margin: 0.5rem 0;
    color: #374151;
  }
  .status-ok {
    color: #059669;
    font-weight: 500;
  }
  .status-error {
    color: #dc2626;
    font-weight: 500;
  }
  .btn-primary, .btn-secondary, .btn-danger {
    padding: 0.75rem 1.5rem;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    border: none;
    font-size: 0.875rem;
  }
  .btn-primary {
    background: #3b82f6;
    color: white;
  }
  .btn-primary:hover {
    background: #2563eb;
  }
  .btn-secondary {
    background: #f3f4f6;
    color: #374151;
    border: 1px solid #d1d5db;
  }
  .btn-secondary:hover {
    background: #e5e7eb;
  }
  .btn-danger {
    background: #dc2626;
    color: white;
  }
  .btn-danger:hover {
    background: #b91c1c;
  }
  .modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
  }
  .modal-content {
    background: white;
    border-radius: 12px;
    width: 90%;
    max-width: 500px;
    max-height: 90vh;
    overflow-y: auto;
    padding: 2rem;
  }
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    border-bottom: 1px solid #e5e7eb;
    padding-bottom: 1rem;
  }
  .modal-header h3 {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 600;
  }
  .close-btn {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #6b7280;
    padding: 0;
  }
  .close-btn:hover {
    color: #374151;
  }
  .form-group {
    margin-bottom: 1.5rem;
  }
  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #374151;
    font-size: 0.875rem;
  }
  .form-group input,
  .form-group select,
  .form-group textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 1rem;
    transition: border-color 0.2s ease;
  }
  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }
  .form-actions {
    display: flex;
    gap: 1rem;
    margin-top: 1.5rem;
  }
  .auth-error {
    background: #fef2f2;
    border: 1px solid #fecaca;
    color: #dc2626;
    padding: 0.75rem;
    border-radius: 6px;
    font-size: 0.875rem;
    margin-top: 1rem;
  }
  @media (max-width: 768px) {
    .admin-container {
      padding: 1rem;
    }
    .stats-grid {
      grid-template-columns: 1fr;
    }
    .section-header {
      flex-direction: column;
      gap: 1rem;
      align-items: stretch;
    }
    .section-controls {
      flex-direction: column;
    }
    .section-controls input[type="search"] {
      width: 100%;
    }
    .actions-grid {
      grid-template-columns: 1fr;
    }
    .table-container {
      font-size: 0.75rem;
    }
    .form-actions {
      flex-direction: column;
    }
  }
</style>
